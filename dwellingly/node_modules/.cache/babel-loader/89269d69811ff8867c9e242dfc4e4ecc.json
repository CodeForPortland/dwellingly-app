{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sarah\\\\Documents\\\\Code For PDX\\\\Dwelling JOIN\\\\dwellingly-app\\\\dwellingly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sarah\\\\Documents\\\\Code For PDX\\\\Dwelling JOIN\\\\dwellingly-app\\\\dwellingly\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.scss';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { LoginForm } from './views/login';\nimport { Home } from './views/home';\nimport { Dashboard } from './views/dashboard';\nimport { Terms } from './views/terms';\nimport { PrivateRoute, auth } from './Auth';\nimport Header from './components/Header/index';\nexport const UserContext = React.createContext(); // const parseJwt = ( token ) => {\n//   var base64Payload = token.split( '.' )[1];\n//   var base64 = base64Payload.replace( '-', '+' ).replace( '_', '/' );\n//   return JSON.parse( atob( base64 ) );\n// }\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.login = (username, password) => {\n      auth.authenticate(username, password).then(response => {\n        if (response) {\n          //let parsedJwt = parseJwt(response.access_token);\n          this.setState({\n            userSession: {\n              isAuthenticated: true,\n              accessJwt: response.data.access_token,\n              refreshJwt: response.data.refresh_token\n              /*\r\n              userId: parsedJwt.userId,\r\n              userFirst: parsedJwt.userFirst,\r\n              userLast: parsedJwt.userLast,\r\n              userEmail: parsedJwt.userEmail\r\n              */\n\n            }\n          });\n        }\n      }).catch(error => {\n        alert(\"Failed to login\");\n      });\n    };\n\n    this.logout = () => {\n      auth.signout().then(() => {\n        this.setState({\n          userSession: {\n            isAuthenticated: false,\n            accessJwt: '',\n            refreshJwt: '',\n            userId: '',\n            userFirst: '',\n            userLast: '',\n            userEmail: ''\n          }\n        });\n        window.location.replace('/login');\n      });\n    };\n\n    this.state = {\n      userSession: {\n        isAuthenticated: false,\n        accessJwt: '',\n        refreshJwt: '',\n        userId: '',\n        userFirst: '',\n        userLast: '',\n        userEmail: ''\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(UserContext.Provider, {\n      value: {\n        user: _objectSpread({}, this.state.userSession),\n        login: this.login,\n        logout: this.logout\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: LoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/dashboard\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/terms\",\n      component: Terms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Sarah/Documents/Code For PDX/Dwelling JOIN/dwellingly-app/dwellingly/src/App.js"],"names":["React","BrowserRouter","Switch","Route","LoginForm","Home","Dashboard","Terms","PrivateRoute","auth","Header","UserContext","createContext","App","Component","constructor","props","login","username","password","authenticate","then","response","setState","userSession","isAuthenticated","accessJwt","data","access_token","refreshJwt","refresh_token","catch","error","alert","logout","signout","userId","userFirst","userLast","userEmail","window","location","replace","state","render","user"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.scss';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { LoginForm } from './views/login';\r\nimport { Home } from './views/home';\r\nimport { Dashboard } from './views/dashboard';\r\nimport { Terms } from './views/terms';\r\nimport { PrivateRoute, auth } from './Auth';\r\nimport Header from './components/Header/index';\r\n\r\nexport const UserContext = React.createContext();\r\n\r\n// const parseJwt = ( token ) => {\r\n//   var base64Payload = token.split( '.' )[1];\r\n//   var base64 = base64Payload.replace( '-', '+' ).replace( '_', '/' );\r\n//   return JSON.parse( atob( base64 ) );\r\n// }\r\n\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userSession: {\r\n        isAuthenticated: false,\r\n        accessJwt: '',\r\n        refreshJwt: '',\r\n        userId: '',\r\n        userFirst: '',\r\n        userLast: '',\r\n        userEmail: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  login = (username, password) => {\r\n    auth.authenticate(username, password)\r\n      .then( response => {\r\n        if (response) {\r\n          //let parsedJwt = parseJwt(response.access_token);\r\n          this.setState({\r\n            userSession: {\r\n              isAuthenticated: true,\r\n              accessJwt: response.data.access_token,\r\n              refreshJwt: response.data.refresh_token,\r\n              /*\r\n              userId: parsedJwt.userId,\r\n              userFirst: parsedJwt.userFirst,\r\n              userLast: parsedJwt.userLast,\r\n              userEmail: parsedJwt.userEmail\r\n              */\r\n            }\r\n          });\r\n        }\r\n      })\r\n    .catch( (error) => {\r\n      alert(\"Failed to login\");\r\n    })\r\n  }\r\n\r\n  logout = () => {\r\n    auth.signout()\r\n      .then( () => {\r\n        this.setState({\r\n          userSession: {\r\n            isAuthenticated: false,\r\n            accessJwt: '',\r\n            refreshJwt: '',\r\n            userId: '',\r\n            userFirst: '',\r\n            userLast: '',\r\n            userEmail: ''\r\n          }\r\n        })\r\n        window.location.replace('/login');\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <UserContext.Provider value={{ user: { ...this.state.userSession }, login: this.login, logout: this.logout }} >\r\n        <BrowserRouter>\r\n          <div className='App'>\r\n            <Header />\r\n\r\n            <Switch>\r\n              <PrivateRoute exact path='/' component={Dashboard} />\r\n              <Route exact path='/login' component={LoginForm} />\r\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n              <Route exact path='/terms' component={Terms} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}