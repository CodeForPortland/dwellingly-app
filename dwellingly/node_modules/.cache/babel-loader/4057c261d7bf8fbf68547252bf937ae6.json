{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarah\\\\Documents\\\\Code For PDX\\\\Dwelling JOIN\\\\dwellingly-app\\\\dwellingly\\\\src\\\\views\\\\signup.js\";\nimport React, { Component } from 'react';\nimport { Form, Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { UserContext } from '../App';\nimport * as axios from 'axios';\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, \"*Name must have at least 2 characters\").max(100, \"*Names can't be longer than 100 characters\"),\n  lastName: Yup.string().min(2, \"*Name must have at least 2 characters\").max(100, \"*Names can't be longer than 100 characters\"),\n  emailAddress: Yup.string().required(\"*Email Address is required\"),\n  password: Yup.string().required(\"*Password is required\"),\n  confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], \"Passwords must match\") //https://github.com/jaredpalmer/formik/issues/90\n  .required(\"*Password confirmation is required\")\n});\n\nconst formHandler = data => {// axios.post('http://localhost:5000/users', data, { headers: {\"Authorization\" : `Bearer ${context.user.accessJwt}`} })\n  //     .then(function(response){\n  //         console.log(response);\n  //     })\n  //     .catch(function(error){\n  //         console.log(error);\n  //     })\n};\n\nexport class SignupForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allUsers: undefined\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"add-property__container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h2\", {\n        className: \"page-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, \"Create an Account for Dwelling.ly\"),\n      /*#__PURE__*/\n      React.createElement(Formik, {\n        initialValues: {\n          firstName: \"\",\n          lastName: \"\",\n          emailAddress: \"\",\n          password: \"\",\n          passwordConfirmation: \"\"\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          console.log(\"submitting\", values);\n          setSubmitting(true);\n          formHandler(values);\n          resetForm();\n          setSubmitting(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, ({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n        touched,\n        isValid,\n        isSubmitting\n      }) =>\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"form-container add-property__main_container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Form, {\n        className: \"add-property__form-container\",\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"form-row columns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        className: \"column is-one-fifth\",\n        htmlFor: \"firstName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 45\n        }\n      }, \"First Name\"),\n      /*#__PURE__*/\n      React.createElement(Field, {\n        className: \"column form-field\",\n        type: \"text\",\n        name: \"firstName\",\n        onChange: handleChange,\n        value: values.firstName,\n        placeholder: \"First Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 45\n        }\n      }), errors.firstName ?\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"error-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 66\n        }\n      }, errors.firstName) : null),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"form-row columns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        className: \"column is-one-fifth\",\n        htmlFor: \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 45\n        }\n      }, \"Last Name\"),\n      /*#__PURE__*/\n      React.createElement(Field, {\n        className: \"column form-field\",\n        type: \"text\",\n        name: \"lastName\",\n        onChange: handleChange,\n        value: values.lastName,\n        placeholder: \"Last Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 45\n        }\n      }), errors.lastName ?\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"error-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 65\n        }\n      }, errors.lastName) : null),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"form-row columns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        className: \"column is-one-fifth\",\n        htmlFor: \"emailAddress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 45\n        }\n      }, \"Email\"),\n      /*#__PURE__*/\n      React.createElement(Field, {\n        className: \"column form-field\",\n        type: \"text\",\n        name: \"emailAddress\",\n        onChange: handleChange,\n        value: values.emailAddress,\n        placeholder: \"Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 45\n        }\n      }), errors.emailAddress ?\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"error-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 69\n        }\n      }, errors.emailAddress) : null),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"form-row columns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        className: \"column is-one-fifth\",\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 45\n        }\n      }, \"Password\"),\n      /*#__PURE__*/\n      React.createElement(Field, {\n        className: \"column form-field\",\n        type: \"text\",\n        name: \"password\",\n        onChange: handleChange,\n        value: values.password,\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }\n      }), errors.password ?\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"error-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 65\n        }\n      }, errors.password) : null),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"form-row columns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        className: \"column is-one-fifth\",\n        htmlFor: \"confirmPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 45\n        }\n      }, \"Confirm Password\"),\n      /*#__PURE__*/\n      React.createElement(Field, {\n        className: \"column form-field\",\n        type: \"text\",\n        name: \"confirmPassword\",\n        onChange: handleChange,\n        value: values.confirmPassword,\n        placeholder: \" Confirm Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 45\n        }\n      }), errors.confirmPassword ?\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"error-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 72\n        }\n      }, errors.confirmPassword) : null),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"container-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 41\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        className: `${isValid && \"active\"} save_button button is-rounded`,\n        type: \"submit\",\n        disabled: isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 45\n        }\n      }, \"SIGN UP\"))))))\n    );\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Sarah/Documents/Code For PDX/Dwelling JOIN/dwellingly-app/dwellingly/src/views/signup.js"],"names":["React","Component","Form","Field","Formik","Yup","UserContext","axios","validationSchema","object","shape","firstName","string","min","max","lastName","emailAddress","required","password","confirmPassword","oneOf","ref","formHandler","data","SignupForm","constructor","props","state","allUsers","undefined","render","passwordConfirmation","values","setSubmitting","resetForm","console","log","handleSubmit","handleChange","errors","touched","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { UserContext } from '../App';\r\nimport * as axios from 'axios';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .min(2, \"*Name must have at least 2 characters\")\r\n        .max(100, \"*Names can't be longer than 100 characters\"),\r\n    lastName: Yup.string()\r\n        .min(2, \"*Name must have at least 2 characters\")\r\n        .max(100, \"*Names can't be longer than 100 characters\"),\r\n    emailAddress: Yup.string()\r\n        .required(\"*Email Address is required\"),\r\n    password: Yup.string()\r\n        .required(\"*Password is required\"),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], \"Passwords must match\") //https://github.com/jaredpalmer/formik/issues/90\r\n        .required(\"*Password confirmation is required\") \r\n});\r\n\r\nconst formHandler = (data) => {\r\n    // axios.post('http://localhost:5000/users', data, { headers: {\"Authorization\" : `Bearer ${context.user.accessJwt}`} })\r\n    //     .then(function(response){\r\n    //         console.log(response);\r\n    //     })\r\n    //     .catch(function(error){\r\n    //         console.log(error);\r\n    //     })\r\n}\r\n\r\nexport class SignupForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n        allUsers: undefined,\r\n        }\r\n    }    \r\n\r\n    render() {\r\n      return (\r\n        \r\n                    <div className=\"add-property__container\">\r\n                        <h2 className=\"page-title\">Create an Account for Dwelling.ly</h2>\r\n\r\n                        <Formik\r\n                            initialValues={{\r\n                                firstName: \"\",\r\n                                lastName: \"\",\r\n                                emailAddress: \"\",\r\n                                password: \"\",\r\n                                passwordConfirmation: \"\"\r\n                            }}\r\n                            validationSchema={validationSchema}\r\n                            onSubmit={(values, {setSubmitting, resetForm})=> {\r\n                                console.log(\"submitting\", values);\r\n                                setSubmitting(true);\r\n                                formHandler(values);\r\n                                resetForm();\r\n                                setSubmitting(false);\r\n                                \r\n                            }}>\r\n                            {({ handleSubmit, handleChange, values, errors, touched, isValid, isSubmitting }) => (\r\n                                <div className=\"form-container add-property__main_container\">\r\n                                    <Form className=\"add-property__form-container\" onSubmit={handleSubmit}>\r\n                                        <div className=\"form-row columns\">\r\n                                            <label className=\"column is-one-fifth\" htmlFor=\"firstName\">First Name</label>\r\n                                            <Field\r\n                                                className=\"column form-field\"\r\n                                                type=\"text\"\r\n                                                name=\"firstName\"\r\n                                                onChange={handleChange}\r\n                                                value={values.firstName}\r\n                                                placeholder=\"First Name\"\r\n                                            />\r\n                                            {errors.firstName ? (<div className=\"error-message\">{errors.firstName}</div>) : null} \r\n                                        </div>\r\n                                        <div className=\"form-row columns\">\r\n                                            <label className=\"column is-one-fifth\" htmlFor=\"lastName\">Last Name</label>\r\n                                            <Field\r\n                                                className=\"column form-field\"\r\n                                                type=\"text\"\r\n                                                name=\"lastName\"\r\n                                                onChange={handleChange}\r\n                                                value={values.lastName}\r\n                                                placeholder=\"Last Name\"\r\n                                            />\r\n                                            {errors.lastName ? (<div className=\"error-message\">{errors.lastName}</div>) : null} \r\n\r\n                                        </div>\r\n                                        <div className=\"form-row columns\">\r\n                                            <label className=\"column is-one-fifth\" htmlFor=\"emailAddress\">Email</label>\r\n                                            <Field\r\n                                                className=\"column form-field\"\r\n                                                type=\"text\"\r\n                                                name=\"emailAddress\"\r\n                                                onChange={handleChange}\r\n                                                value={values.emailAddress}\r\n                                                placeholder=\"Email\"\r\n                                            />\r\n                                            {errors.emailAddress ? (<div className=\"error-message\">{errors.emailAddress}</div>) : null} \r\n\r\n                                        </div>\r\n                                        <div className=\"form-row columns\">\r\n                                            <label className=\"column is-one-fifth\" htmlFor=\"password\">Password</label>\r\n                                            <Field\r\n                                                className=\"column form-field\"\r\n                                                type=\"text\"\r\n                                                name=\"password\"\r\n                                                onChange={handleChange}\r\n                                                value={values.password}\r\n                                                placeholder=\"Password\"\r\n                                            />\r\n                                            {errors.password ? (<div className=\"error-message\">{errors.password}</div>) : null} \r\n                                        </div>\r\n                                        <div className=\"form-row columns\">\r\n                                            <label className=\"column is-one-fifth\" htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                                            <Field\r\n                                                className=\"column form-field\"\r\n                                                type=\"text\"\r\n                                                name=\"confirmPassword\"\r\n                                                onChange={handleChange}\r\n                                                value={values.confirmPassword}\r\n                                                placeholder=\" Confirm Password\"\r\n                                            />\r\n                                            {errors.confirmPassword ? (<div className=\"error-message\">{errors.confirmPassword}</div>) : null} \r\n                                        </div>\r\n                                        \r\n                                        <div className=\"container-footer\">\r\n                                            <button className={`${isValid && \"active\"} save_button button is-rounded`} type=\"submit\" disabled={isSubmitting}>SIGN UP</button>\r\n                                            \r\n                                        </div>\r\n                                    </Form>\r\n\r\n                                </div>\r\n                                )}\r\n                        </Formik>\r\n                    </div>\r\n      )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}