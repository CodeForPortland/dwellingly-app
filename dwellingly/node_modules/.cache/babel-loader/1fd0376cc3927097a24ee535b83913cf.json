{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarah\\\\Documents\\\\Code For PDX\\\\Dwelling JOIN\\\\dwellingly-app\\\\dwellingly\\\\src\\\\views\\\\signup.js\";\nimport React, { Component } from 'react';\nimport { Form, Field, Formik } from 'formik';\nimport * as Yup from 'yup'; // import '../App.scss';\n// import '.dwellingly\\src\\scss\\pages\\_signup.scss'\n\nimport { UserContext } from '../App'; // import * as axios from 'axios';\n//issues:\n//clicking the sign up button does not result in console log (line 67 or line 32)\n//errors for First Name and Last Name fields not rendering.\n//To Do\n//add: OR \"sign Up with google\" link \n//add \"privacy policy\" href or redirect link\n//link up to styling\n\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, \"*Name must have at least 2 characters\").max(100, \"*Names can't be longer than 100 characters\"),\n  lastName: Yup.string().min(2, \"*Name must have at least 2 characters\").max(100, \"*Names can't be longer than 100 characters\"),\n  emailAddress: Yup.string().required(\"*Email Address is required\"),\n  password: Yup.string().required(\"*Password is required\"),\n  confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], \"Passwords must match\") //https://github.com/jaredpalmer/formik/issues/90\n  .required(\"*Password confirmation is required\")\n});\n\nconst formHandler = data => {\n  console.log(\"Data passed to signup formHandler:\", data); // axios.post('http://localhost:5000/register', data, { headers: {\"Authorization\" : `Bearer ${context.user.accessJwt}`} })\n  //     .then(function(response){\n  //         console.log(response);\n  //     })\n  //     .catch(function(error){\n  //         console.log(error);\n  //     })\n};\n\nexport class SignupForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allUsers: undefined\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(UserContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, session => {\n        return (\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"add-property__container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"h2\", {\n            className: \"page-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }\n          }, \"Create an Account for Dwelling.ly\"),\n          /*#__PURE__*/\n          React.createElement(Formik, {\n            initialValues: {\n              firstName: \"\",\n              lastName: \"\",\n              emailAddress: \"\",\n              password: \"\",\n              passwordConfirmation: \"\"\n            },\n            validationSchema: validationSchema,\n            onSubmit: (values, {\n              setSubmitting,\n              resetForm\n            }) => {\n              console.log(\"submitting\", values);\n              setSubmitting(true);\n              formHandler(values);\n              resetForm();\n              setSubmitting(false);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }\n          }, ({\n            handleSubmit,\n            handleChange,\n            values,\n            errors,\n            touched,\n            isValid,\n            isSubmitting\n          }) =>\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"form-container add-property__main_container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Form, {\n            className: \"add-property__form-container\",\n            onSubmit: handleSubmit,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"form-row columns\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"label\", {\n            className: \"column is-one-fifth\",\n            htmlFor: \"firstName\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }\n          }, \"First Name\"),\n          /*#__PURE__*/\n          React.createElement(Field, {\n            className: \"\",\n            type: \"text\",\n            name: \"firstName\",\n            onChange: handleChange,\n            value: values.firstName,\n            placeholder: \"First Name\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }\n          }), errors.firstName ?\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"error-message\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 58\n            }\n          }, errors.firstName) : null),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"form-row columns\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"label\", {\n            className: \"column is-one-fifth\",\n            htmlFor: \"lastName\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }\n          }, \"Last Name\"),\n          /*#__PURE__*/\n          React.createElement(Field, {\n            className: \"column form-field\",\n            type: \"text\",\n            name: \"lastName\",\n            onChange: handleChange,\n            value: values.lastName,\n            placeholder: \"Last Name\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }\n          }), errors.lastName ?\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"error-message\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 57\n            }\n          }, errors.lastName) : null),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"form-row columns\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"label\", {\n            className: \"column is-one-fifth\",\n            htmlFor: \"emailAddress\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }\n          }, \"Email\"),\n          /*#__PURE__*/\n          React.createElement(Field, {\n            className: \"column form-field\",\n            type: \"text\",\n            name: \"emailAddress\",\n            onChange: handleChange,\n            value: values.emailAddress,\n            placeholder: \"Email\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }\n          }), errors.emailAddress ?\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"error-message\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 61\n            }\n          }, errors.emailAddress) : null),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"form-row columns\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"label\", {\n            className: \"column is-one-fifth\",\n            htmlFor: \"password\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }\n          }, \"Password\"),\n          /*#__PURE__*/\n          React.createElement(Field, {\n            className: \"column form-field\",\n            type: \"text\",\n            name: \"password\",\n            onChange: handleChange,\n            value: values.password,\n            placeholder: \"Password\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 37\n            }\n          }), errors.password ?\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"error-message\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 57\n            }\n          }, errors.password) : null),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"form-row columns\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"label\", {\n            className: \"column is-one-fifth\",\n            htmlFor: \"confirmPassword\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }\n          }, \"Confirm Password\"),\n          /*#__PURE__*/\n          React.createElement(Field, {\n            className: \"column form-field\",\n            type: \"text\",\n            name: \"confirmPassword\",\n            onChange: handleChange,\n            value: values.confirmPassword,\n            placeholder: \" Confirm Password\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }\n          }), errors.confirmPassword ?\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"error-message\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 64\n            }\n          }, errors.confirmPassword) : null),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"container-footer\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"button\", {\n            className: `${isValid && \"active\"} save_button button is-rounded`,\n            type: \"submit\",\n            disabled: isSubmitting,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }\n          }, \"SIGN UP\"))))))\n        );\n      })\n    );\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Sarah/Documents/Code For PDX/Dwelling JOIN/dwellingly-app/dwellingly/src/views/signup.js"],"names":["React","Component","Form","Field","Formik","Yup","UserContext","validationSchema","object","shape","firstName","string","min","max","lastName","emailAddress","required","password","confirmPassword","oneOf","ref","formHandler","data","console","log","SignupForm","constructor","props","state","allUsers","undefined","render","session","passwordConfirmation","values","setSubmitting","resetForm","handleSubmit","handleChange","errors","touched","isValid","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CACA;AACA;;AACA,SAASC,WAAT,QAA4B,QAA5B,C,CACA;AAEA;AACI;AACA;AAEJ;AACI;AACA;AACA;;AAEJ,MAAMC,gBAAgB,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,SAAS,EAAEL,GAAG,CAACM,MAAJ,GACNC,GADM,CACF,CADE,EACC,uCADD,EAENC,GAFM,CAEF,GAFE,EAEG,4CAFH,CAD6B;AAIxCC,EAAAA,QAAQ,EAAET,GAAG,CAACM,MAAJ,GACLC,GADK,CACD,CADC,EACE,uCADF,EAELC,GAFK,CAED,GAFC,EAEI,4CAFJ,CAJ8B;AAOxCE,EAAAA,YAAY,EAAEV,GAAG,CAACM,MAAJ,GACTK,QADS,CACA,4BADA,CAP0B;AASxCC,EAAAA,QAAQ,EAAEZ,GAAG,CAACM,MAAJ,GACLK,QADK,CACI,uBADJ,CAT8B;AAWxCE,EAAAA,eAAe,EAAEb,GAAG,CAACM,MAAJ,GACZQ,KADY,CACN,CAACd,GAAG,CAACe,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADM,EACuB,sBADvB,EAC+C;AAD/C,GAEZJ,QAFY,CAEH,oCAFG;AAXuB,CAAnB,CAAzB;;AAgBA,MAAMK,WAAW,GAAIC,IAAD,IAAU;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDF,IAAlD,EAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CATD;;AAWA,OAAO,MAAMG,UAAN,SAAyBxB,SAAzB,CAAmC;AACtCyB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACbC,MAAAA,QAAQ,EAAEC;AADG,KAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACP;AAAA;AACE,0BAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEC,OAAO,IAAI;AACL;AAAA;AACJ;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADJ;AAAA;AAGI,8BAAC,MAAD;AACI,YAAA,aAAa,EAAE;AACXtB,cAAAA,SAAS,EAAE,EADA;AAEXI,cAAAA,QAAQ,EAAE,EAFC;AAGXC,cAAAA,YAAY,EAAE,EAHH;AAIXE,cAAAA,QAAQ,EAAE,EAJC;AAKXgB,cAAAA,oBAAoB,EAAE;AALX,aADnB;AAQI,YAAA,gBAAgB,EAAE1B,gBARtB;AASI,YAAA,QAAQ,EAAE,CAAC2B,MAAD,EAAS;AAACC,cAAAA,aAAD;AAAgBC,cAAAA;AAAhB,aAAT,KAAuC;AAC7Cb,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BU,MAA1B;AACAC,cAAAA,aAAa,CAAC,IAAD,CAAb;AACAd,cAAAA,WAAW,CAACa,MAAD,CAAX;AACAE,cAAAA,SAAS;AACTD,cAAAA,aAAa,CAAC,KAAD,CAAb;AAEH,aAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAiBK,CAAC;AAAEE,YAAAA,YAAF;AAAgBC,YAAAA,YAAhB;AAA8BJ,YAAAA,MAA9B;AAAsCK,YAAAA,MAAtC;AAA8CC,YAAAA,OAA9C;AAAuDC,YAAAA,OAAvD;AAAgEC,YAAAA;AAAhE,WAAD;AAAA;AACG;AAAK,YAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,8BAAC,IAAD;AAAM,YAAA,SAAS,EAAC,8BAAhB;AAA+C,YAAA,QAAQ,EAAEL,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAO,YAAA,SAAS,EAAC,qBAAjB;AAAuC,YAAA,OAAO,EAAC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ;AAAA;AAEI,8BAAC,KAAD;AACI,YAAA,SAAS,EAAC,EADd;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,IAAI,EAAC,WAHT;AAII,YAAA,QAAQ,EAAEC,YAJd;AAKI,YAAA,KAAK,EAAEJ,MAAM,CAACxB,SALlB;AAMI,YAAA,WAAW,EAAC,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAUK6B,MAAM,CAAC7B,SAAP;AAAA;AAAoB;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgC6B,MAAM,CAAC7B,SAAvC,CAApB,GAA+E,IAVpF,CADJ;AAAA;AAaI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAO,YAAA,SAAS,EAAC,qBAAjB;AAAuC,YAAA,OAAO,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAAA;AAEI,8BAAC,KAAD;AACI,YAAA,SAAS,EAAC,mBADd;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,QAAQ,EAAE4B,YAJd;AAKI,YAAA,KAAK,EAAEJ,MAAM,CAACpB,QALlB;AAMI,YAAA,WAAW,EAAC,WANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAUKyB,MAAM,CAACzB,QAAP;AAAA;AAAmB;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgCyB,MAAM,CAACzB,QAAvC,CAAnB,GAA6E,IAVlF,CAbJ;AAAA;AA0BI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAO,YAAA,SAAS,EAAC,qBAAjB;AAAuC,YAAA,OAAO,EAAC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ;AAAA;AAEI,8BAAC,KAAD;AACI,YAAA,SAAS,EAAC,mBADd;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,IAAI,EAAC,cAHT;AAII,YAAA,QAAQ,EAAEwB,YAJd;AAKI,YAAA,KAAK,EAAEJ,MAAM,CAACnB,YALlB;AAMI,YAAA,WAAW,EAAC,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAUKwB,MAAM,CAACxB,YAAP;AAAA;AAAuB;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgCwB,MAAM,CAACxB,YAAvC,CAAvB,GAAqF,IAV1F,CA1BJ;AAAA;AAuCI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAO,YAAA,SAAS,EAAC,qBAAjB;AAAuC,YAAA,OAAO,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ;AAAA;AAEI,8BAAC,KAAD;AACI,YAAA,SAAS,EAAC,mBADd;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,QAAQ,EAAEuB,YAJd;AAKI,YAAA,KAAK,EAAEJ,MAAM,CAACjB,QALlB;AAMI,YAAA,WAAW,EAAC,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAUKsB,MAAM,CAACtB,QAAP;AAAA;AAAmB;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgCsB,MAAM,CAACtB,QAAvC,CAAnB,GAA6E,IAVlF,CAvCJ;AAAA;AAmDI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAO,YAAA,SAAS,EAAC,qBAAjB;AAAuC,YAAA,OAAO,EAAC,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ;AAAA;AAEI,8BAAC,KAAD;AACI,YAAA,SAAS,EAAC,mBADd;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,IAAI,EAAC,iBAHT;AAII,YAAA,QAAQ,EAAEqB,YAJd;AAKI,YAAA,KAAK,EAAEJ,MAAM,CAAChB,eALlB;AAMI,YAAA,WAAW,EAAC,mBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAUKqB,MAAM,CAACrB,eAAP;AAAA;AAA0B;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgCqB,MAAM,CAACrB,eAAvC,CAA1B,GAA2F,IAVhG,CAnDJ;AAAA;AAgEI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAQ,YAAA,SAAS,EAAG,GAAEuB,OAAO,IAAI,QAAS,gCAA1C;AAA2E,YAAA,IAAI,EAAC,QAAhF;AAAyF,YAAA,QAAQ,EAAEC,YAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAhEJ,CADJ,CAlBR,CAHJ;AADI;AAkGN,OApGF;AADF;AAyGD;;AAnHqC","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n// import '../App.scss';\r\n// import '.dwellingly\\src\\scss\\pages\\_signup.scss'\r\nimport { UserContext } from '../App';\r\n// import * as axios from 'axios';\r\n\r\n//issues:\r\n    //clicking the sign up button does not result in console log (line 67 or line 32)\r\n    //errors for First Name and Last Name fields not rendering.\r\n\r\n//To Do\r\n    //add: OR \"sign Up with google\" link \r\n    //add \"privacy policy\" href or redirect link\r\n    //link up to styling\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .min(2, \"*Name must have at least 2 characters\")\r\n        .max(100, \"*Names can't be longer than 100 characters\"),\r\n    lastName: Yup.string()\r\n        .min(2, \"*Name must have at least 2 characters\")\r\n        .max(100, \"*Names can't be longer than 100 characters\"),\r\n    emailAddress: Yup.string()\r\n        .required(\"*Email Address is required\"),\r\n    password: Yup.string()\r\n        .required(\"*Password is required\"),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], \"Passwords must match\") //https://github.com/jaredpalmer/formik/issues/90\r\n        .required(\"*Password confirmation is required\") \r\n});\r\n\r\nconst formHandler = (data) => {\r\n    console.log(\"Data passed to signup formHandler:\", data);\r\n    // axios.post('http://localhost:5000/register', data, { headers: {\"Authorization\" : `Bearer ${context.user.accessJwt}`} })\r\n    //     .then(function(response){\r\n    //         console.log(response);\r\n    //     })\r\n    //     .catch(function(error){\r\n    //         console.log(error);\r\n    //     })\r\n}\r\n\r\nexport class SignupForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n        allUsers: undefined,\r\n        }\r\n    }    \r\n\r\n    render() {\r\n      return (\r\n        <UserContext.Consumer>\r\n         {session => {\r\n                return (\r\n            <div className=\"add-property__container\">\r\n                <h2 className=\"page-title\">Create an Account for Dwelling.ly</h2>\r\n\r\n                <Formik\r\n                    initialValues={{\r\n                        firstName: \"\",\r\n                        lastName: \"\",\r\n                        emailAddress: \"\",\r\n                        password: \"\",\r\n                        passwordConfirmation: \"\"\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, {setSubmitting, resetForm})=> {\r\n                        console.log(\"submitting\", values);\r\n                        setSubmitting(true);\r\n                        formHandler(values);\r\n                        resetForm();\r\n                        setSubmitting(false);\r\n                        \r\n                    }}>\r\n                    {({ handleSubmit, handleChange, values, errors, touched, isValid, isSubmitting }) => (\r\n                        <div className=\"form-container add-property__main_container\">\r\n                            <Form className=\"add-property__form-container\" onSubmit={handleSubmit}>\r\n                                <div className=\"form-row columns\">\r\n                                    <label className=\"column is-one-fifth\" htmlFor=\"firstName\">First Name</label>\r\n                                    <Field\r\n                                        className=\"\"\r\n                                        type=\"text\"\r\n                                        name=\"firstName\"\r\n                                        onChange={handleChange}\r\n                                        value={values.firstName}\r\n                                        placeholder=\"First Name\"\r\n                                    />\r\n                                    {errors.firstName ? (<div className=\"error-message\">{errors.firstName}</div>) : null} \r\n                                </div>\r\n                                <div className=\"form-row columns\">\r\n                                    <label className=\"column is-one-fifth\" htmlFor=\"lastName\">Last Name</label>\r\n                                    <Field\r\n                                        className=\"column form-field\"\r\n                                        type=\"text\"\r\n                                        name=\"lastName\"\r\n                                        onChange={handleChange}\r\n                                        value={values.lastName}\r\n                                        placeholder=\"Last Name\"\r\n                                    />\r\n                                    {errors.lastName ? (<div className=\"error-message\">{errors.lastName}</div>) : null} \r\n\r\n                                </div>\r\n                                <div className=\"form-row columns\">\r\n                                    <label className=\"column is-one-fifth\" htmlFor=\"emailAddress\">Email</label>\r\n                                    <Field\r\n                                        className=\"column form-field\"\r\n                                        type=\"text\"\r\n                                        name=\"emailAddress\"\r\n                                        onChange={handleChange}\r\n                                        value={values.emailAddress}\r\n                                        placeholder=\"Email\"\r\n                                    />\r\n                                    {errors.emailAddress ? (<div className=\"error-message\">{errors.emailAddress}</div>) : null} \r\n\r\n                                </div>\r\n                                <div className=\"form-row columns\">\r\n                                    <label className=\"column is-one-fifth\" htmlFor=\"password\">Password</label>\r\n                                    <Field\r\n                                        className=\"column form-field\"\r\n                                        type=\"text\"\r\n                                        name=\"password\"\r\n                                        onChange={handleChange}\r\n                                        value={values.password}\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                    {errors.password ? (<div className=\"error-message\">{errors.password}</div>) : null} \r\n                                </div>\r\n                                <div className=\"form-row columns\">\r\n                                    <label className=\"column is-one-fifth\" htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                                    <Field\r\n                                        className=\"column form-field\"\r\n                                        type=\"text\"\r\n                                        name=\"confirmPassword\"\r\n                                        onChange={handleChange}\r\n                                        value={values.confirmPassword}\r\n                                        placeholder=\" Confirm Password\"\r\n                                    />\r\n                                    {errors.confirmPassword ? (<div className=\"error-message\">{errors.confirmPassword}</div>) : null} \r\n                                </div>\r\n                                \r\n                                <div className=\"container-footer\">\r\n                                    <button className={`${isValid && \"active\"} save_button button is-rounded`} type=\"submit\" disabled={isSubmitting}>SIGN UP</button>\r\n                                    \r\n                                </div>\r\n                            </Form>\r\n\r\n                        </div>\r\n                        )}\r\n                </Formik>\r\n            </div>\r\n            )\r\n         }}   \r\n        </UserContext.Consumer>\r\n        \r\n      )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}